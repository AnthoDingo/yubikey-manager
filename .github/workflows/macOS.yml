name: macOS

on: [push, pull_request]

# Adapted from https://github.com/sabnzbd/sabnzbd/blob/develop/.github/workflows/build_release.yml#L80
jobs:
  build:

    runs-on: macos-11

    env:
      MACOSX_DEPLOYMENT_TARGET: "11.0"
      CFLAGS: -arch x86_64 -arch arm64
      ARCHFLAGS: -arch x86_64 -arch arm64

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.1'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry
          python3 -m poetry install

      - name: Explicitly use universal versions
        run: |
          # Export exact versions
          python3 -m poetry export --without-hashes > requirements.txt
          grep cryptography requirements.txt > cryptography.txt
          grep cffi requirements.txt > source-reqs.txt
          grep pyscard requirements.txt >> source-reqs.txt
          # Remove non-universal packages
          python3 -m poetry run pip uninstall -y cryptography cffi pyscard
          # Build cffi from source to get universal build
          python3 -m poetry run pip install --upgrade -r source-reqs.txt --no-binary :all:
          # Explicitly install pre-build universal build of cryptography
          python3 -m poetry run pip download -r cryptography.txt --platform macosx_10_12_universal2 --only-binary :all: --no-deps --dest .
          python3 -m poetry run pip install -r cryptography.txt --no-cache-dir --no-index --find-links .

      - name: PyInstaller
        run: |
          python3 -m poetry run pyinstaller ykman.spec
          dist/ykman/ykman --version
          [[ -z "$(dist/ykman/ykman --version | grep -E "not found|missing")" ]]

      - name: Build installer
        run: |
          ./resources/macos/make_installer.sh "5.0.0"

      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: ykman-builds-macos
          path: dist
